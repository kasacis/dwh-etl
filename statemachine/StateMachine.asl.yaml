Comment: A description of my state machine
StartAt: GetDatabase
States:
  GetDatabase:
    Type: Task
    Next: Is database already created
    Parameters:
      Name: athena-sample-project-db-97z2nu9xrj
    Resource: arn:aws:states:::aws-sdk:glue:getDatabase
  Is database already created:
    Type: Choice
    Choices:
      - Variable: $.Database.Name
        StringEquals: athena-sample-project-db-97z2nu9xrj
        Next: Glue ETL StartJobRun
    Default: CreateDatabase
  CreateDatabase:
    Type: Task
    Next: Glue ETL StartJobRun
    Parameters:
      DatabaseInput:
        Name: athena-sample-project-db-97z2nu9xrj
    Resource: arn:aws:states:::aws-sdk:glue:createDatabase
  Glue ETL StartJobRun:
    Type: Task
    Resource: arn:aws:states:::glue:startJobRun.sync
    Parameters:
      JobName: Test-Glue
    Next: StartCrawler
  StartCrawler:
    Type: Task
    Next: GetCrawler
    Parameters:
      Name: test-crawler
    Resource: arn:aws:states:::aws-sdk:glue:startCrawler
  GetCrawler:
    Type: Task
    Next: Choice
    Parameters:
      Name: test-crawler
    Resource: arn:aws:states:::aws-sdk:glue:getCrawler
  Choice:
    Type: Choice
    Choices:
      - Variable: $.Crawler.State
        StringEquals: RUNNING
        Next: Wait
    Default: Redshift Load Job
  Redshift Load Job:
    Type: Task
    Resource: arn:aws:states:::glue:startJobRun
    Parameters:
      JobName: Job3
    Next: Success
  Success:
    Type: Succeed
  Wait:
    Type: Wait
    Seconds: 5
    Next: GetCrawler
